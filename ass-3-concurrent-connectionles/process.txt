
********Concurrent connectionless server algorithm********
Master 1: Create a socket and bind to the address. Leave socket unconnected.
Master 2: Repeatedly call recvfrom to get next request from client and create a new
 slave thread (possibly in a new process) to handle the response.
Slave 1: Begin with a specific request from the master (see Master 2 above) as well
as access to the socket (i.e., receive access to socket).
Slave 2: Form a reply according to the application protocol and send back to client
using sendto
Slave 3: exit, i.e., slave terminates after handling one request.